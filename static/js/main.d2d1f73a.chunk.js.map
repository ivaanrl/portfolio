{"version":3,"sources":["assets/Projects/Screenshots/twooterScreenshot.png","assets/Projects/Screenshots/algorithmVisualizerScreenshot.png","assets/Projects/Screenshots/Screenshot from 2020-02-06 14-56-12.png","assets/Projects/Screenshots/pomodoroimg.png","components/navbar/Navbar.tsx","components/projects/project/Project.tsx","components/projects/Projects.tsx","components/hero/Hero.tsx","components/skills/Skills.tsx","components/Contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","className","to","smooth","offset","Project","props","src","picture","alt","technologies","map","technology","key","title","description","href","github","target","rel","liveSite","Projects","id","animateIn","animateOnce","TwotterImg","AlgorithmsImg","PathfindingImg","PomodoroImg","Hero","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","Skills","useState","skillDescription","setSkillDescription","currentSelectedElement","setCurrentSelectedElement","useEffect","document","getElementById","changeSkillText","selectSkill","event","selectedElement","currentTarget","classList","add","remove","onClick","Contact","feedback","setFeedback","email","setEmail","handleChange","value","sendFeedback","templateId","variables","emailjs","resetForm","type","required","placeholder","onChange","name","message_html","from_email","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2d1f73a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twooterScreenshot.8061a4ef.png\";","module.exports = __webpack_public_path__ + \"static/media/algorithmVisualizerScreenshot.bfcd8943.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot from 2020-02-06 14-56-12.9a4aa935.png\";","module.exports = __webpack_public_path__ + \"static/media/pomodoroimg.0636bc5d.png\";","import React from 'react';\nimport './Navbar.scss';\n\nimport { Link } from 'react-scroll';\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <Link to=\"frontend\" smooth={true} offset={-120}>\n        <div className=\"nav-item\">SKILLS</div>\n      </Link>\n      <Link to=\"projects\" smooth={true}>\n        <div className=\"nav-item\">PROJECTS</div>\n      </Link>\n      <Link to=\"contact\" smooth={true}>\n        <div className=\"nav-item\">CONTACT</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './Project.scss';\nexport interface projectProps {\n  title: string;\n  description: string;\n  github: string;\n  liveSite: string;\n  picture: string;\n  technologies: string[];\n}\n\nconst Project = (props: projectProps) => {\n  return (\n    <div className=\"project-container\">\n      <div className=\"img-container\">\n        <img\n          src={props.picture}\n          alt=\"Screenshot of Twooter app\"\n          className=\"project-img\"\n        ></img>\n        <div className=\"technologies-container\">\n          {props.technologies.map(technology => (\n            <div className=\"technology\" key={technology}>\n              {technology}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"text-container\">\n        <div className=\"title-and-description-container\">\n          <div className=\"project-title\">{props.title} </div>\n\n          <div className=\"description\">{props.description}</div>\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <div className=\"github-button\">\n          <a href={props.github} target=\"_blank\" rel=\"noopener noreferrer\">\n            Code\n          </a>{' '}\n        </div>\n        <div className=\"livesite-button\">\n          <a href={props.liveSite} target=\"_blank\" rel=\"noopener noreferrer\">\n            Live Site\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport './Projects.scss';\nimport Project from './project/Project';\nimport TwotterImg from '../../assets/Projects/Screenshots/twooterScreenshot.png';\nimport AlgorithmsImg from '../../assets/Projects/Screenshots/algorithmVisualizerScreenshot.png';\nimport PathfindingImg from '../../assets/Projects/Screenshots/Screenshot from 2020-02-06 14-56-12.png';\nimport PomodoroImg from '../../assets/Projects/Screenshots/pomodoroimg.png';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport 'animate.css/animate.min.css';\n\nconst Projects = () => {\n  const TwooterDescription: string =\n    \"Twooter is a Twitter clone created using Angular 8 along with bootstrap in the front end. It connects with a NodeJS/Express REST API which utilises PostgreSQL to store the users' data.\";\n  const twooterTechnologies: string[] = [\n    'Angular',\n    'Bootstrap',\n    'NodeJS',\n    'Express',\n    'PostgreSQL'\n  ];\n\n  const AlgorithmDescription: string =\n    'Algorithm visualizer is a website where you can watch how some algorithms work. Here you can mainly visualize sorting and searching algorithms, as well as some others!.';\n\n  const algorithmTechnologies: string[] = ['Angular', 'Bootstrap'];\n\n  const pathfindingDescription: string =\n    \"In pathfinding visualizer you can visualize Dijkstra's and A* weighted pathfinding algorithms, as well as DFS and BFS unweighted pathfinding algorithms.\";\n\n  const pathfindignTechnologies: string[] = ['React'];\n\n  const pomodoroTechnologies: string[] = ['React', 'Jest', 'Enzyme', 'Redux'];\n\n  const pomodoroDescription: string =\n    'This is a simple Pomodoro Timer in which you can set custom times for your work sessions and breaks. It was built using TDD (Test Driven Development), using Jest and Enzyme.';\n\n  return (\n    <div className=\"container\" id=\"projects\">\n      <div className=\"title-container\">\n        <div className=\"title\">PROJECTS</div>\n      </div>\n\n      <div className=\"projects-container\">\n        <div className=\"separator\"></div>\n        <ScrollAnimation animateIn=\"fadeInRight\" animateOnce>\n          <Project\n            title=\"Twooter\"\n            description={TwooterDescription}\n            github=\"https://github.com/ivaanrl/social-clone\"\n            liveSite=\"https://ivaanrl.github.io/social-clone/\"\n            picture={TwotterImg}\n            technologies={twooterTechnologies}\n          ></Project>\n        </ScrollAnimation>\n        <div className=\"separator\"></div>\n        <ScrollAnimation animateIn=\"fadeInRight\" animateOnce>\n          <Project\n            title=\"Algorith Visualizer\"\n            description={AlgorithmDescription}\n            github=\"https://github.com/ivaanrl/algorithmVisualizer\"\n            liveSite=\"https://ivaanrl.github.io/algorithmVisualizer/sortingVisualizer\"\n            picture={AlgorithmsImg}\n            technologies={algorithmTechnologies}\n          ></Project>\n        </ScrollAnimation>\n        <div className=\"separator\"></div>\n        <ScrollAnimation animateIn=\"fadeInRight\" animateOnce>\n          <Project\n            title=\"Pathfinding Visualizer\"\n            description={pathfindingDescription}\n            github=\"https://github.com/ivaanrl/pathfindingVisualizer\"\n            liveSite=\"https://ivaanrl.github.io/pathfindingVisualizer/\"\n            picture={PathfindingImg}\n            technologies={pathfindignTechnologies}\n          ></Project>\n        </ScrollAnimation>\n        <div className=\"separator\"></div>\n        <ScrollAnimation animateIn=\"fadeInRight\" animateOnce>\n          <Project\n            title=\"Pomodoro Timer (TDD with Jest + Enzyme)\"\n            description={pomodoroDescription}\n            github=\"https://github.com/ivaanrl/pomodoro/deployments\"\n            liveSite=\"https://ivaanrl.github.io/pomodoro/\"\n            picture={PomodoroImg}\n            technologies={pomodoroTechnologies}\n          ></Project>\n        </ScrollAnimation>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './Hero.scss';\nimport Typist from 'react-typist';\n\nconst Hero = () => {\n  return (\n    <div className=\"main-container\">\n      <Typist\n        className=\"typist\"\n        cursor={{\n          show: true,\n          blink: true,\n          element: '|',\n          hideWhenDone: true,\n          hideWhenDoneDelay: 250\n        }}\n      >\n        <a className=\"name\">\n          I'm <span>Iván Roldán Lusich.</span>\n        </a>\n        <br />\n        <a className=\"country\">Argentina.</a>\n        <br />\n        <a className=\"full-stack\">\n          <span>Full-stack</span> Web Developer.\n        </a>\n      </Typist>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React, { useEffect, useState } from 'react';\nimport './Skills.scss';\n\nconst Skills = () => {\n  const [skillDescription, setSkillDescription] = useState();\n\n  const [currentSelectedElement, setCurrentSelectedElement] = useState();\n\n  useEffect(() => {\n    setCurrentSelectedElement(document.getElementById('frontend'));\n\n    changeSkillText('frontend');\n  }, []);\n\n  const selectSkill = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const selectedElement: HTMLElement = event.currentTarget;\n    selectedElement.classList.add('skills-title-selected');\n    currentSelectedElement?.classList.remove('skills-title-selected');\n    setCurrentSelectedElement(selectedElement);\n    changeSkillText(selectedElement.id);\n  };\n\n  const changeSkillText = (id: string) => {\n    switch (id) {\n      case 'frontend':\n        setSkillDescription(\n          <div className=\"skill-description-container\">\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">HTLM & CSS</div>\n              <div className=\"description-item\">HTML5, CSS3, Sass</div>\n              <div className=\"description-item\">Bootstrap 3 & 4</div>\n              <div className=\"description-item\">\n                <span>Responsive Web Design</span>\n              </div>\n            </div>\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">JAVASCRIPT</div>\n              <div className=\"description-item\">Javascript ES6+</div>\n              <div className=\"description-item\">\n                <span>React.js & Redux</span>\n              </div>\n              <div className=\"description-item\">\n                <span>React Hooks</span>\n              </div>\n              <div className=\"description-item\">\n                <span>Angular 8</span>\n              </div>\n              <div className=\"description-item\">API Integration</div>\n            </div>\n          </div>\n        );\n        break;\n      case 'backend':\n        setSkillDescription(\n          <div className=\"skill-description-container\">\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">BACKEND</div>\n              <div className=\"description-item\">\n                <span>Node.js & Express.js</span>\n              </div>\n              <div className=\"description-item\">Basics of Ruby on rails</div>\n              <div className=\"description-item\">REST API Creation</div>\n            </div>\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">DATABASES</div>\n              <div className=\"description-item\">\n                <span>PostgreSQL</span>\n              </div>\n              <div className=\"description-item\">PgAdmin 4</div>\n              <div className=\"description-item\">Psql</div>\n              <div className=\"description-item\">MongoDB</div>\n            </div>\n          </div>\n        );\n        break;\n      case 'tools':\n        setSkillDescription(\n          <div className=\"skill-description-container\">\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">TOOLS</div>\n              <div className=\"description-item\">\n                <span>Typescript</span>\n              </div>\n              <div className=\"description-item\">Git version control</div>\n              <div className=\"description-item\">Postman</div>\n              <div className=\"description-item\">Cloudinary</div>\n              <div className=\"description-item\">\n                <span>Webpack</span>\n              </div>\n              <div className=\"description-item\">\n                <span>Jest</span>\n              </div>\n            </div>\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">MORE TOOLS</div>\n              <div className=\"description-item\">Npm/Yarn</div>\n              <div className=\"description-item\">ESLint</div>\n              <div className=\"description-item\">VSCode</div>\n              <div className=\"description-item\">Github</div>\n              <div className=\"description-item\">\n                <span>Heroku</span>\n              </div>\n              <div className=\"description-item\">\n                <span>Enzyme</span>\n              </div>\n            </div>\n          </div>\n        );\n        break;\n      case 'learning':\n        setSkillDescription(\n          <div className=\"skill-description-container\">\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">CURRENTLY LEARNING</div>\n              <div className=\"description-item\">C/C++</div>\n              <div className=\"description-item\">MatLab</div>\n            </div>\n            <div className=\"skill-description\">\n              <div className=\"skills-description-title\">WANT TO LEARN</div>\n              <div className=\"description-item\">Python</div>\n              <div className=\"description-item\">Electron</div>\n              <div className=\"description-item\">Machine Learning</div>\n              <div className=\"description-item\">GraphQL</div>\n            </div>\n          </div>\n        );\n        break;\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"title-container\">\n        <div className=\"skills-main-title\">SKILLS</div>\n      </div>\n      <div className=\"skills-container\">\n        <div className=\"skills-title-container\">\n          <div\n            className=\"skills-title skills-title-selected\"\n            id=\"frontend\"\n            onClick={selectSkill}\n          >\n            FrontEnd\n          </div>\n          <div className=\"skills-title\" id=\"backend\" onClick={selectSkill}>\n            BackEnd\n          </div>\n          <div className=\"skills-title\" id=\"tools\" onClick={selectSkill}>\n            Tools\n          </div>\n          <div className=\"skills-title\" id=\"learning\" onClick={selectSkill}>\n            Learning\n          </div>\n        </div>\n        {skillDescription}\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React, { useState } from 'react';\nimport './Contact.scss';\nimport * as emailjs from 'emailjs-com';\nconst Contact = () => {\n  const [feedback, setFeedback] = useState();\n  const [email, setEmail] = useState();\n\n  const handleChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    if (event.currentTarget.id === 'email') {\n      setEmail(event.currentTarget.value);\n    } else {\n      setFeedback(event.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = () => {\n    const templateId = 'template_6UyWUtVR';\n    sendFeedback(templateId, {\n      message_html: feedback,\n      from_email: email\n    });\n    resetForm();\n  };\n\n  const sendFeedback = (templateId: string, variables: {}) => {\n    emailjs.send('gmail', templateId, variables, 'user_Tqu4Qb768TWFhX3VukiG7');\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setFeedback('');\n  };\n\n  return (\n    <div className=\"container\" id=\"contact\">\n      <div className=\"title-container\">\n        <div className=\"title contact-main-title\">Contact</div>\n      </div>\n      <form className=\"test-mailing\">\n        <h1>Feel Free to Contact Me</h1>\n        <div>\n          <label>Email:</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            required\n            placeholder=\"Email@example.com\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <textarea\n            id=\"test-mailing\"\n            name=\"test-mailing\"\n            onChange={handleChange}\n            placeholder=\"Insert your message here\"\n            required\n            value={feedback}\n          />\n        </div>\n        <button type=\"button\" className=\"btn-contact\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport './App.scss';\nimport Navbar from './components/navbar/Navbar';\nimport Projects from './components/projects/Projects';\nimport Hero from './components/hero/Hero';\nimport Skills from './components/skills/Skills';\nimport Contact from './components/Contact/Contact';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Hero />\n      <Projects />\n      <Skills />\n      <Contact />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}